body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif
}

header,
section {
    padding: 1rem;
}

/*
The use of -webkit-stick is for older/other browsers that may not support the
sticky attribute.
Sticky positioning can be thought of as a hybrid of relative and fixed positioning.
*/
h2{
    background-color: tomato;
    padding: 1rem 0.5rem;
    color: white;
    margin-bottom: 1.5rem;
    /* postion/fix the h2 at the top */
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    /* this works because p and h3 are direct siblings.*/
}

/* The code below did not work as it was missing a style rule */
h3{
    position: -webkit-sticky;
    position: sticky;
    top: 60px;
    /* style rule that was missing */
    background-color: white;
}


/*
The ch width unit: lets you limit the width of text elements by character count
- more specifically, the width of the "0" character for a given font.
for example if you have 60ch as your width, then the width is equal to 60 "0"
characters in width.
*/
p{
    max-width: 90ch;
    margin-bottom: 1.5rem;
}

.snowflake{
    position: fixed;
    /* use %'s to be more "fluid" */
    bottom: 10%;
    right: 5%;
    z-index: 1;
}

h1{
    position: -webkit-sticky;
    position: sticky;
    top: 0;
}

/* Create a sticky footer */
footer{
    /* as it must be fixed/stuck at the bottom of the web page, used position:fixed; */
    position: fixed;
    left: 0;
    bottom: 0;
    height: 70px;
    width: 100%;
    background-color: orange;
}

/* this was added to make the heading in the footer larger */
footer h4{
    font-size: 1.4rem;
}